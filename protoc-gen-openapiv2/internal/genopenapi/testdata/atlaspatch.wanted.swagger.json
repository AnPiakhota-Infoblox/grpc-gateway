{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "OpenAPI V2 Atlas Patch Test",
    "contact": {
      "name": "John Doe",
      "url": "https://github.com/infobloxprivate/atlas-contacts-app",
      "email": "jdoe@infoblox.com"
    },
    "version": "2.0"
  },
  "paths": {
    "/contact": {
      "post": {
        "description": "Use this method to create a contact entry in the database.",
        "tags": [
          "ContactService"
        ],
        "summary": "Create a contact.",
        "operationId": "ContactServiceContactService_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/testdataContact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/testdataCreateContactResponse"
            }
          }
        }
      }
    },
    "/contact/{id}": {
      "get": {
        "tags": [
          "ContactService"
        ],
        "operationId": "ContactServiceContactService_Get",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "Unique ID number for this contact.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/testdataContact"
            }
          }
        }
      }
    },
    "/mimic": {
      "get": {
        "description": "For more info see https://github.com/infobloxopen/grpc-gateway/commit/b1b91ec20bc061ecbb8cafa21ea9fd96f4e06337",
        "tags": [
          "ContactService"
        ],
        "summary": "Test getting objects with mimicked primitive types.",
        "operationId": "ContactServiceContactService_GetMimic",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/testdataMimicObjectResponse"
            }
          }
        }
      }
    },
    "/mimic/{requestValueOne}": {
      "post": {
        "description": "For more info see https://github.com/infobloxopen/grpc-gateway/commit/b1b91ec20bc061ecbb8cafa21ea9fd96f4e06337",
        "tags": [
          "ContactService"
        ],
        "summary": "Test posting objects with mimicked primitive types.",
        "operationId": "ContactServiceContactService_PostMimic",
        "parameters": [
          {
            "type": "string",
            "name": "requestValueOne",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "this message mimics string type, however when put in request rendered as a definition",
              "type": "string",
              "properties": {
                "requestEnum": {
                  "$ref": "#/definitions/MimicObjectRequestMimicRequestEnum"
                },
                "requestValueTwo": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        }
      }
    }
  },
  "definitions": {
    "ContactPhoneNumber": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/ContactPhoneType"
        }
      }
    },
    "ContactPhoneType": {
      "type": "string",
      "default": "MOBILE",
      "enum": [
        "MOBILE",
        "HOME",
        "WORK"
      ]
    },
    "MimicObjectResponseMimicResponseEnum": {
      "type": "string",
      "default": "VALUE_ONE",
      "enum": [
        "VALUE_ONE",
        "VALUE_TWO"
      ]
    },
    "testdataContact": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "description": "Unique ID number for this contact.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "phones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactPhoneNumber"
          }
        }
      }
    },
    "testdataCreateContactResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/testdataContact"
        }
      }
    },
    "testdataMimicObjectResponse": {
      "description": "this message mimics string type, however when put in response rendered as a definition",
      "type": "string",
      "properties": {
        "responseEnum": {
          "$ref": "#/definitions/MimicObjectResponseMimicResponseEnum"
        },
        "responseValueOne": {
          "type": "string"
        },
        "responseValueTwo": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "ContactService"
    }
  ]
}